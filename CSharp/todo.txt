- Общие
	- Убрать префикс _ !
	- CodeStyle check
		BelhardTraining namespace

- 01
	- string samples (sorting, comparing)
	- Unicode demo
		string hello = "Прив\u0301ет";
		"a b".Dump();
		"a\u2002b".Dump(); // En space
		"a\u2003b".Dump(); // Em space
		"a\u2004b".Dump(); // Three-Per-Em space
		"a\u2005b".Dump(); // Four-Per-Em space
		"a\u2009b".Dump(); // Thin Space
		"a\u200Ab".Dump(); // Hair Space
		non-breaking space ???

- 04 (IO & exceptions)
	- LogParser
	- search via Windows Search
		DSearch - https://msdn.microsoft.com/en-us/library/windows/desktop/dd940335%28v=vs.85%29.aspx
		System - https://msdn.microsoft.com/en-us/library/ff521735%28v=vs.85%29.aspx

		Overview - http://msdn.microsoft.com/en-us/library/aa965362%28VS.85%29.aspx
		Querying the Index Programmatically - http://msdn.microsoft.com/en-us/library/bb266517%28v=vs.85%29.aspx
		OleDb "Provider=Search.CollatorDSO;Extended Properties='Application=Windows';"
		SELECT Top 1 System.ItemPathDisplay FROM SYSTEMINDEX
			ItemName
			ItemUrl 
	- Logging
		NLog - https://github.com/nlog/nlog/wiki/Tutorial

- 06 (XML)
	- XML creation
	- Данные из инета
		- RSS (http://rss.slashdot.org/Slashdot/slashdot ?)
		- Курс валют
		- Погода
			string url =$"http://api.openweathermap.org/data/2.5/forecast/daily?q={city}&type=accurate&mode=xml&units=metric&cnt=1&appid={AppID}";

- 07 (Asm & reflection)
	- reflection demo
		AppDomain.CurrentDomain.GetAssemblies()
			.SelectMany(asm => asm.GetTypes())
			.Where(t => t.FullName.StartsWith("System") && t.Name.EndsWith("Exception"))
			.Select(t => t.FullName)
			.OrderBy(s => s)
	- manifest/UAC sample with elevation point(s)
		http://msdn.microsoft.com/en-us/library/windows/desktop/bb756929.aspx

-------------------

- Design pattern samples
- shortcut management
- MEF plugin sample

- collections demo
void Main()
{
	List<string> emails = new List<string>();
	emails.AddRange(File.ReadLines(@"d:\temp\bhl\email.txt"));
	emails.Sort(CompareEmailByHost);
	//emails.Dump();
	//var emailByDomain = emails.GroupBy(e => e.Substring(e.IndexOf("@")+1));
	var emailByDomain = from e in emails
							group e by e.Substring(e.IndexOf("@")+1) into grouping
							//orderby grouping.Key.Substring(0, e.IndexOf("@"))
							select grouping;
	foreach (var g in emailByDomain)
	{
		foreach(var email in g)
		{
			Console.Write(email+"; ");
		}
		Console.WriteLine();
	}
}

int CompareEmailByHost(string email1, string email2)
{
	string host1 = email1.Substring(email1.IndexOf("@")+1);
	string host2 = email2.Substring(email2.IndexOf("@")+1);
	
	int result = host1.CompareTo(host2);
	if (result != 0) return result;

	string name1 = email1.Substring(0, email1.IndexOf("@"));
	string name2 = email2.Substring(0, email2.IndexOf("@"));
	
	return name1.CompareTo(name2);
}

