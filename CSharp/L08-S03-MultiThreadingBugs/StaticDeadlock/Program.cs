using System.Threading;

// *********************************************************
// ВНИМАНИЕ!
// Данный пример является иллюстрацией КАК НЕ НАДО писать код!
// *********************************************************

/*
 * Запуск этой программы с большой вероятностью приведет к ее зависанию из-за взаимоблокировки 
 *	между статическим конструктором и статическим методом инициализации
 *	
 * По правилам языка статический конструктор выполняется один и только один раз до первого обращения 
 *	к статическим членам класса. Именно поэтому выполнение Initialize блокируется в ожидании конца
 *	выполнения статического конструктора, который, в свою очередь, ждеь конца выполнения Initialize.
 *	
 * http://ericlippert.com/2013/01/31/the-no-lock-deadlock/
*/

namespace StaticDeadlock
{
	class Program
	{
		static Program()
		{
			// Запускаем инициализацию в отдельном потоке
			var thread = new Thread(Initialize);
			thread.Start();
			thread.Join();
		}

		private static void Initialize()
		{
		}

		static void Main()
		{
		}
	}
}
