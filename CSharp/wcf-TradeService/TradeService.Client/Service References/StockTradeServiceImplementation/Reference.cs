//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Belhard.TradeService.Client.StockTradeServiceImplementation {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Quote", Namespace="http://schemas.datacontract.org/2004/07/Belhard.TradeService")]
    [System.SerializableAttribute()]
    public partial class Quote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TickerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Ask {
            get {
                return this.AskField;
            }
            set {
                if ((this.AskField.Equals(value) != true)) {
                    this.AskField = value;
                    this.RaisePropertyChanged("Ask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Bid {
            get {
                return this.BidField;
            }
            set {
                if ((this.BidField.Equals(value) != true)) {
                    this.BidField = value;
                    this.RaisePropertyChanged("Bid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticker {
            get {
                return this.TickerField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerField, value) != true)) {
                    this.TickerField = value;
                    this.RaisePropertyChanged("Ticker");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://http://tc.belhard.com/StockTrade", ConfigurationName="StockTradeServiceImplementation.IStockTradeService")]
    public interface IStockTradeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://http://tc.belhard.com/StockTrade/IStockTradeService/GetQuote", ReplyAction="http://http://tc.belhard.com/StockTrade/IStockTradeService/GetQuoteResponse")]
        Belhard.TradeService.Client.StockTradeServiceImplementation.Quote GetQuote(string ticker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://http://tc.belhard.com/StockTrade/IStockTradeService/PublishQuote", ReplyAction="http://http://tc.belhard.com/StockTrade/IStockTradeService/PublishQuoteResponse")]
        void PublishQuote(Belhard.TradeService.Client.StockTradeServiceImplementation.Quote quote);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockTradeServiceChannel : Belhard.TradeService.Client.StockTradeServiceImplementation.IStockTradeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockTradeServiceClient : System.ServiceModel.ClientBase<Belhard.TradeService.Client.StockTradeServiceImplementation.IStockTradeService>, Belhard.TradeService.Client.StockTradeServiceImplementation.IStockTradeService {
        
        public StockTradeServiceClient() {
        }
        
        public StockTradeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockTradeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockTradeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockTradeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Belhard.TradeService.Client.StockTradeServiceImplementation.Quote GetQuote(string ticker) {
            return base.Channel.GetQuote(ticker);
        }
        
        public void PublishQuote(Belhard.TradeService.Client.StockTradeServiceImplementation.Quote quote) {
            base.Channel.PublishQuote(quote);
        }
    }
}
